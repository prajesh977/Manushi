/* 
==========================================================================
BREAKPOINTS
========================================================================== 
*/
@mixin breakpoint($class) {
    @if $class==xxs {
        @media (max-width: 600px) {
            @content;
        }
    }
    @if $class==xs {
        @media (max-width: 767px) {
            @content;
        }
    }
    @else if $class==sm {
        @media (min-width: 768px) {
            @content;
        }
    }
    @else if $class==md {
        @media (min-width: 992px) {
            @content;
        }
    }
    @else if $class==lg {
        @media (min-width: 1200px) {
            @content;
        }
    }
    @else {
        @warn "Breakpoint mixin supports: xxs,xs, sm, md, lg";
    }
}
@mixin screen($name, $orientation:portrait) {
    @if $name==ipad {
        @media (min-width: 768px) and (max-width: 1024px) and (orientation: $orientation) {
            @content;
        }
    }
    @else {
        @media (min-width: 1024px) and (max-width: 768px) and (orientation: $orientation) {
            @content;
        }
    }
}
// A map of breakpoints.
$breakpoints: ( xs: 576px, sm: 768px, md: 992px, lg: 1024px, xl: 1200px);
//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);
        // Write the media query.
        @media (min-width: $breakpoint-value) {
            @content;
        }
        // If the breakpoint doesn't exist in the map.
    }
    @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);
        // Write the media query.
        @media (max-width: ($breakpoint-value - 1)) {
            @content;
        }
        // If the breakpoint doesn't exist in the map.
    }
    @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
    // If both the lower and upper breakpoints exist in the map.
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
        // Get the lower and upper breakpoints.
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);
        // Write the media query.
        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
            @content;
        }
        // If one or both of the breakpoints don't exist.
    }
    @else {
        // If lower breakpoint is invalid.
        @if (map-has-key($breakpoints, $lower)==false) {
            // Log a warning.
            @warn 'Your lower breakpoint was invalid: #{$lower}.';
        }
        // If upper breakpoint is invalid.
        @if (map-has-key($breakpoints, $upper)==false) {
            // Log a warning.
            @warn 'Your upper breakpoint was invalid: #{$upper}.';
        }
    }
}